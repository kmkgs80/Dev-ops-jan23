-----------------------------------------------------------------
#!/bin/bash

echo "I am ABC and I am from Bangalore"

echo "this is my number 7654321"
-----------------------------------------------------------------------------

-------------example1.sh---------------------------------------
#!/bin/bash           


echo "Hi this is ABC and I am from Blore"

echo "below is the list of current dirs"
ls -lrt

----------------------------------------------------------------------


how to execute shell script

./example1.sh
or
sh example1.sh
or
bash example1.sh

what's first line of shell script?
#!/bin/bash  --> shebang. it invokes bash shell. if i don't write. it uses default shell.

-----------------------------------------------------
------------------------------------example2.sh---------------------------------------
#!/bin/bash

var=ABC
var1=Blore
var2="xyz 1234"

echo "This is $var and I am from $var1"
--------------------------------------------------------------------------------------------------

-------------------------------example3.sh-----------------------------------------------
#!/bin/bash

echo "This is $1 and I am from $2"

------------------------------------------------------------------------
how do you read arguements in shell script?

we can pass arguements to shell script separated by spaces 

we can read them using $1 $2 $3... inside shell script

$1 ---> 1st arguement 
$2----> 2nd arguement 
.
.
${10} ---> 10th agruemnt 
.
.
------------------------------------------------------------------------------

$# --> total number of args passed to script
$* --> All args passed to script
$? --> used to check status of last executed command, 0 means success and non-zero is failure
$@ --> all args paased to script but stored in array format
$! ---> PID of last command went into background
$$  --> PID of current running process
$0 --> name of the script itself 

----------------------------------------------------------------------------------
how do you run script in background?

use & at end of script.

./script1 &

------------------------------------------------------------------

ps -ef | grep "script name"

how do you bring it back to foreground?

fg PID


difference between ./script &  and nohup ./scrpt &

./script & ---> script will run in background and stops its execution once you close session or terminal


nohup ./scrpt &

nohup (no hang up)--> run script in background and will complete execution even after closing session or terminal 
=================================================================================================================================
simple if statement

if [ condition ]
then
statment
fi
----------------------------------------
write a script to check given number is 5 or not
#!/bin/bash

if [ $1 -eq 5 ]
then
        echo "$1 is five"
fi
--------------------------------------------------------------------------
numeric comparison
-eq  --> equals
-ne --> not equal to
-gt --> greater than
-ge --> greater than or equal to
-lt --> less than 
-le  --> less than or equal to
--------------------------------------------------------------

if.... else....
--------------------------------------------------------------
if [ condition ]
then
statment1
else
statement2
fi
----------------------------------------
#!/bin/bash

if [ $1 -eq 5 ]
then
        echo "$1 is five"
else
        echo "$1 is not five"
fi
-----------------------------------------------------------------------------------------

write a script to find biggest of two numbers 
#!/bin/bash

if [ $1 -gt $2 ];then
        echo "$1 is big"  # 1st arguemnt
else
        echo "$2 is big"
fi
------------------------------------------------------------------------------------------------------------

restrict users to pass only two args 

#!/bin/bash

if [ $# -ne 2 ];then
        echo "pass 2 args only"
        exit 1
fi

if [ $1 -gt $2 ];then
        echo "$1 is big"  # 1st arguemnt
else
        echo "$2 is big"
fi
-----------------------------------------------------------------------------------------------
if [ condition ];then
statement
elif [ condition1 ];then
statement
elif [ condtion2];then
statement
else
default statement
fi
--------------------------------------------------------
&& --> AND
|| ---> OR
!  --> NOT
--------------------------------------------------------------------
environment variable --> variable which can be exported to subshell
----------------------------------------------------------------------
how do you set env varaibles?
-----------------------------------------------------------------------

write a script to find biggest of 3 numbers and also restrict users to pass only 3 args

#!/bin/bash

if [ $# -ne 3 ];then
    echo "pass 3 args"
    exit 1
fi

if [ $1 -gt $2 ] && [ $1 -gt $3 ];then
        echo "$1 is big"
elif [ $2 -gt $1 ] && [  $2 -gt $3 ];then
        echo "$2 is big"
else
        echo "$3 is big"
fi
-------------------------------------------------------------------------------------------------------------
while loop

while [ condition ]; do
statement
done
--------------------------------------
------------------------print5.sh---------------------------
#!/bin/bash

num=$1
while [ $num -gt 0 ];do
echo $num
num=`expr $num - 1`
done
---------------------------------------------------------------
string comparison

== --> equal to
>= --> greater than or equal to
<= --> less than or equal to
!= --> not equal to

-------------------------------------------------

Assignment : write a script to find factorial of a number 
----------------------------------------------------------------------------------
write a script to find factorial of a number 

#!/bin/bash

num=$1
fact=1

while [ $num -gt 1 ];do
fact=`expr $fact \* $num`
num=`expr $num - 1`
done
echo "fact of $1 is $fact"
------------------------------------------------------------

special characters ---> special characters have special meaning to shell.. special characters are * $* $$ etc...

escape character (\): escape special meaning to shell

echo "\$?"
echo "\$$"

----------------------------------------------------------------------------------------
write a script to check given name is a file or dir or link

#!/bin/bash

echo "enter name to check"
read name 

if [ -f $name ];then
echo "$name is a file"
elif [ -d $name ];then
echo "$name is a dir"
elif [ -L $name ];then
echo "$name is a link"
else
echo "$name does not exist"
fi
----------------------------------------------------------------------------------------------------------
-f  --> file
-d --> directory
-e --> exist or not
-r --> read permission
-w --> write permission
-x --> execute permission
how to check file empty or not
--------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
how do read file line by line??

while read line
do
echo $line
done < filename
------------------------------------------------------------------
write a script to find number of words in each line of a file

#!/bin/bash

number=1
while read line
do
    words=`echo "$line" | wc -w` # assigining output of command to varaible
    echo "$number : $words"
    number=`expr $number + 1`
done < $1
--------------------------------------------------------------------------------------------------

write  script to add line number to each line of a file

#!/bin/bash

line_num=1
while read line;do
        echo "$line_num.$line"
        line_num=`expr $line_num + 1`
done < $1

----------------------------------------------------------------------------------------------------------
write a script to segrate only odd lines and store in file called log_odd and even lines in a fille called log_even


write a script to segrate only odd lines and store in file called log_odd and even lines in a fille called log_even

#!/bin/bash

number=1

while read line;do
         status=`expr $number % 2`
        if [  $status -eq 0 ];then
                echo "$line" >> log_even
        else
                echo "$line" >> log_odd
        fi
        number=`expr $number + 1`

done < $1
echo "==============odd lines============"
cat log_odd
echo "====================even lines============"
cat log_even
rm log_odd log_even
-------------------------------------------------------------------------------------------------------------------------------------------------

write a script to find employees if thier age is more than 50 from given data file

NAME EMPID AGE
ABCD 20005 036
XYZA 20006 056
AJAY 20007 034
VIJI 20008 054
GAAA 20009 025
DDDD 20010 042
---------------

#!/bin/bash

sed '1d' $1 > temp

while read line;do
      age=`echo "$line" | awk -F " " '{print $3}'`
       if [ $age -gt 50 ];then
          echo "$line" | awk -F " " '{print $1}'
       fi

done < temp

-------------------------------------------------------------------------------------------------------------------------
write a script to find employees if thier age is between 30 and 50

write a sript to find  employees for given age
==========================================================================================================================================

write a script to reverse a file, 1st line should be printed as last line, 2nd line as 2nd last line and so on...
#!/bin/bash

lines=`cat $1 | wc -l`

while [ $lines -gt 0 ];do

        head -$lines $1 | tail -1 >> rev-log
       lines=`expr $lines - 1`
   done
   cat rev-log
   rm rev-log
-----------------------------------------------------------------------------------------------------
tac filename ---> will print file in reverse order 
-------------------------------------------------------------------------------------------------------
for loop

for i in val1 val2 val3
do
statement
done
---------------------------------------------------------------
-----------------------------------------add-number.sh-----------------------------------------------
#!/bin/bash

sum=0
for i in 2 4 6 7
do
 sum=`expr $sum + $i`
done
echo "sum is $sum"
-------------------------------------------------------------------------------------------------------
#!/bin/bash
var="2 5 7 9 10"
sum=0
for i in $var
do
 sum=`expr $sum + $i`
done
echo "sum is $sum"
-----------------------------------------------------------------------------------------------------------

write a script to add n number
#!/bin/bash
#var="2 5 7 9 10"
sum=0
for i in $*
do
 sum=`expr $sum + $i`
done
echo "sum is $sum"
-------------------------------------------------------------------------------------------------------

how do you debug shell script 

set -x 
-------------------------------------------------------------------------------------
write a script to find factorial for given set of numbers 
---------------------------------------------------------------------------------------------------------------
write a script to find factorial for given set of numbers 

#!/bin/bash

for i in $*; do  #read one value at a time

        num=$i
        fact=1
        while [ $num -gt 0 ];do
                fact=`expr $fact \* $num`
                num=`expr $num - 1`
        done
        echo "fact of $i is $fact"
done
------------------------------------------------------------------------------ 

assignment:
write a script to reverse string (for example if i pass "abcd". script should print "dcba")

---------------------------------------------------------------------------------------------------------
execute command or script on remote server 

ssh -i key.pem user@server2 "/home/ec2-user/scripts/big2.sh 3 4"

ssh -i key.pem user@server2 "ls -lrt"
================================================================================================================

interview script

I have written a script to check disk size. if disk size is more than 90%, send email notification saying disk  size is 90%. 
please take approriate action

-----------------------checksize.sh--------------------------------------

#!/bin/bash
size=`df -h . | tail -1 | awk -F " " '{print $(NF - 1)}' | sed 's/%//g'`

if [ $size -gt 90 ];then

cat file | mail -s "memory reached 90%" -c "abc@gmail.com"  xyz@gmail.com

fi


--------------------------------------------------------------------------------

crontab -e --> edit
crontab -l  ---> list cron jobs

day of week 
00 --> sunday
01 --> monday
02 --> Tuesday
03 --> wed
04 --> Thur
05 --> Fri
06 --> Sat

schedule script to run at 11.30am on 4th july

30 11 04 07 01 /home/ec2-user/scripts.sh
--------------------------------------------------------
schedule to run at 6.15pm today

15 18 04 07 01 /home/ec2-user/scripts.sh

-----------------------------------------------------------
schedule script to run at 7.30pm only on tuesday

30 19 * * 02 /home/ec2-user/scripts.sh
------------------------------------------------------------
schedule script to run at 5.15pm every day
15 17 * * * /home/ec2-user/scripts.sh
----------------------------------------------------------
schedule script to run at 4.30pm on monday and friday
30 16 * * 01,05 /home/ec2-user/scripts.sh
-------------------------------------------------------------
schedule script to run at 4.30pm on monday to friday
30 16 * * 01-05 /home/ec2-user/scripts.sh
-----------------------------------------------------------
schedule script to run every 30mins on wednesday

*/30 * * * 03 /home/ec2-user/scripts.sh
--------------------------------------------------------
every 5 mins on monday 

*/5 * * * 01 /home/ec2-user/scripts.sh
---------------------------------------------------------
every min every day
* * * * * /home/ec2-user/scripts.sh
----------------------------------------------------------------
schedule script to run at 1st of every month at 11.30am

30 11 01 * * /home/ec2-user/scripts.sh
------------------------------------------------------------------
schedule script to run last day of every month 
----------------------------------------------------------------------------
------------------------------------------------------------------------

mail or mailx


cat filename | mail -s "subject" -c "abc@gmail.com" xyz@gmail.com,ajay@gmail.com

or

mail -s "subject" -c "abc@gmail.com" xyz@gmail.com,ajay@gmail.com < filename 

or 

echo -e "Hi,\n body of the mail" | mail -s "subject" -c "abc@gmail.com" xyz@gmail.com,ajay@gmail.com

---------------------------------------------------------------------------------------------------------------------
Assignment: download tomcat and install it on ubuntu server. you can access on browser server:8080
--------------------------------------------------------------------------------------------------------------------------